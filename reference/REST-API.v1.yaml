openapi: 3.0.0
info:
  title: Curator REST API
  version: '1.0'
  description: Ad-hoc tasks orchestration system.
  contact:
    name: Denis Bazhenov
    email: dotsid@gmail.com
    url: 'http://bazhenov.me/'
  license: {}
servers:
  - url: 'http://curator.local'
paths:
  /register-agent:
    post:
      summary: ''
      operationId: post-register-agent
      responses:
        '200':
          description: OK
          headers:
            'Content-Type: text/event-stream':
              schema:
                type: string
              description: ''
              required: true
      description: |-
        Registers new agent in the system. All agent tasks will be available for operators after registration.

        Response of the system is a SSE stream used for sending control commands to the agent. Control commands are used for starting and stopping tasks.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
        description: Agent must provide information about itself and available tasks
      parameters:
        - schema:
            type: string
          in: header
          name: 'Accept: text/event-stream'
components:
  schemas:
    Task:
      title: Task
      type: object
      properties:
        name:
          type: string
          description: name of the task. Will be presented as is to operator using the system
      required:
        - name
      description: Task is the unit of work which agent capable of executing
    Agent:
      title: Agent
      type: object
      description: Agent is a program capable of running tasks. Agent described by application and instance name. Instance name is the hostname in most cases. Application name is used for grouping replicated or distributed systems.
      x-examples:
        basic:
          application: todo
          instance: todo-web-frontend
          tasks:
            - name: cleanup-database
            - name: send-notifications
      properties:
        application:
          type: string
          example: todo-application
        instance:
          type: string
          example: todo-application-host
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
      required:
        - application
        - instance
        - tasks
